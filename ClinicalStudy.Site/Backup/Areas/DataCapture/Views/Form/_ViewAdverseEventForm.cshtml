@using ClinicalStudy.Site.Areas.DataCapture.HtmlHelpers
@model ClinicalStudy.Site.Areas.DataCapture.Models.FormData.AdverseEventFormViewModel
<h2 class="completed">@Model.FormCaption <abbr title="Case Report Form">CRF</abbr></h2>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "Adverse Experience:";
	                               	    s.AssociatedControlName = "AdverseExperience";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.AdverseExperienceQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "AdverseExperience";
	                               	s.Width = 450;
	                               	s.EncodeHtml = false;
	                               }).Bind(Model.AdverseExperience).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "Onset Date:";
	                               	    s.AssociatedControlName = "OnsetDate";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.OnsetDateQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "OnsetDate";
	                               	s.Width = 150;
	                               }).Bind(Model.OnsetDate.HasValue ? Model.OnsetDate.Value.ToShortDateString() : String.Empty).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "Onset Time:";
	                               	    s.AssociatedControlName = "OnsetTime";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.OnsetTimeQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "OnsetTime";
	                               	s.Width = 150;
	                               }).Bind(Model.OnsetTime.HasValue ? Model.OnsetTime.Value.ToShortTimeString() : String.Empty).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "End Date:";
	                               	    s.AssociatedControlName = "EndDate";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.EndDateQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "EndDate";
	                               	s.Width = 150;
	                               }).Bind(Model.EndDate.HasValue ? Model.EndDate.Value.ToShortDateString() : String.Empty).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "End Time:";
	                               	    s.AssociatedControlName = "EndTime";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.EndTimeQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "EndTime";
	                               	s.Width = 150;
	                               }).Bind(Model.EndTime.HasValue ? Model.EndTime.Value.ToShortTimeString() : String.Empty).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                                   	s.ControlStyle.CssClass = "editor-label";
	                                   	s.Text = "Outcome:";
	                                   	s.AssociatedControlName = "Outcome";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.OutcomeQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "Outcome";
	                               	s.Width = 150;
	                               	s.Text = ComboBoxValuesHelper.OutcomeValues.FindByValue(Model.Outcome) != null ? ComboBoxValuesHelper.OutcomeValues.FindByValue(Model.Outcome).Text : String.Empty;
	                               }).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "Intensity:";
	                               	    s.AssociatedControlName = "Intensity";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.IntensityQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "Intensity";
	                               	s.Width = 150;
	                               	s.Text = ComboBoxValuesHelper.IntensityValues.FindByValue(Model.Intensity) != null ? ComboBoxValuesHelper.IntensityValues.FindByValue(Model.Intensity).Text : String.Empty;
	                               }).GetHtml()
</div>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "Relationship to Investigational Drug:";
	                               	    s.AssociatedControlName = "RelationshipToInvestigationalDrug";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.RelationshipToInvestigationalDrugQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "RelationshipToInvestigationalDrug";
	                               	s.Width = 150;
	                               	s.Text = ComboBoxValuesHelper.RelationshipToInvestigationalDrugValues.FindByValue(Model.RelationshipToInvestigationalDrug) != null ? ComboBoxValuesHelper.RelationshipToInvestigationalDrugValues.FindByValue(Model.RelationshipToInvestigationalDrug).Text : String.Empty;
	                               }).GetHtml()
</div>
@Html.DevExpress().Button(s => {
	                                	s.Name = "btnEditAdverse";
	                                	s.SkinID = "Grey";
	                                	s.Text = "Edit";
	                                	s.CausesValidation = false;
	                                	string url = Url.Action("EditForm", "Form", new {Area = "DataCapture", patientNumber = Model.PatientNumber, visitName = Model.VisitName, formName = Model.FormCaption});

	                                	s.ClientSideEvents.Click = String.Format(@"function (s,e) {{
																				var ajaxOptions = {{UpdateTargetId : 'formPanel{0}'}};
																				buttonAjaxClick(s,e, '{1}', ajaxOptions);}}",
											Model.FormId, url);
	                                }).GetHtml()