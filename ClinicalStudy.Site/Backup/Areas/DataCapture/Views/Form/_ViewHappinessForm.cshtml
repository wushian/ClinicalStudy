@using ClinicalStudy.Site.Areas.DataCapture.HtmlHelpers
@model ClinicalStudy.Site.Areas.DataCapture.Models.FormData.HappinessFormViewModel

<h2 class="completed">@Model.FormCaption <abbr title="Case Report Form">CRF</abbr></h2>
<div class="editor-field">
    <div>
	    @Html.DevExpress().Label(s => {
	                               	    s.ControlStyle.CssClass = "editor-label";
	                               	    s.Text = "Happiness:";
	                               	    s.AssociatedControlName = "HappinessLevel";
	                                   }).GetHtml()
	    @FormHelpers.PutQueryIcon(Model.HappinessLevelQuestionId, Model, Url)
    </div>
	@Html.DevExpress().Label(s => {
	                               	s.Name = "HappinessLevel";
	                               	s.Width = 150;
	                               	s.Text = String.Format("{0} ({1}%)", ComboBoxValuesHelper.HappinessValues.FindByValue(Model.HappinessLevel) != null
	                               	                                     	? ComboBoxValuesHelper.HappinessValues.FindByValue(Model.HappinessLevel).Text
	                               	                                     	: String.Empty, Model.HappinessLevel);
	                               }).GetHtml()
</div>
@Html.DevExpress().Button(s => {
	                                	s.Name = "btnEditHappiness";
	                                	s.SkinID = "Grey";
	                                	s.Text = "Edit";
                                        s.CausesValidation = false;
	                                	string url = Url.Action("EditForm", "Form", new {Area = "DataCapture", patientNumber = Model.PatientNumber, visitName = Model.VisitName, formName = Model.FormCaption});

	                                	s.ClientSideEvents.Click = String.Format(@"function (s,e) {{
																				var ajaxOptions = {{UpdateTargetId : 'formPanel{0}'}};
																				buttonAjaxClick(s,e, '{1}', ajaxOptions);}}",
											Model.FormId, url);
	                                }).GetHtml()